Q:1 WAP input = "Hello World", Output = "World Hello" ?
----------------------------------------------------------------------------------------------------

public class Reverse_two_Words {

	public static void main(String[] args) {
		Scanner scr = new Scanner(System.in);
		System.out.println("Entre the String to get reverse");
		String input = scr.nextLine();
		
		// Split the input string into words using space as a delimiter
		String[] words = input.split(" ");
		
		// Check if there are exactly two words
		if(words.length == 2) {
			System.out.println(words[1]+ " "+ words[0]);
		}
		else {
			System.out.println("Provide the Valid input string (e.g : Hello Java)");
		}
		
	}
}
========================================================================================================
Q:2  WAP input = "a2b3c4d5" output = aabbcccc ? 

public class NumricCharCount {

	public static void main(String[] args) {
		
		String str = "a2b3c4d5";
		for(int i =0; i<str.length();i++) {
			if(Character.isAlphabetic(str.charAt(i))) {
				System.out.print(str.charAt(i));
			}
			else {
				int x = Character.getNumericValue(str.charAt(i));
				for(int j =1; j<x ; j++) {
					System.out.print(str.charAt(i-1));
				}
			}
		}
	}

}
===========================================================================================================
Q:3  WAP input = "12hello23world output = 35 // 12+23 =35

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class SumNumericValues {
    public static void main(String[] args) {
        // Input string
        String input = "12hello23world";

        // Regex to match sequences of digits
        Pattern pattern = Pattern.compile("\\d+");
        Matcher matcher = pattern.matcher(input);

        int sum = 0;

        // Find and add all numeric values from the string
        while (matcher.find()) {
            // Extract the numeric value from the string
            int number = Integer.parseInt(matcher.group());
            sum += number;
        }

        // Output the sum of numeric values
        System.out.println("Sum of numeric values: " + sum);
    }
}
======================================================================================================
Q:4 WAP in java  input = "I am not A String output = g ni rts AnotmaI

import java.util.Scanner;

public class ReverseWords {
    public static void main(String[] args) {
        // Create a Scanner object for input
        Scanner scanner = new Scanner(System.in);

        // Prompt the user to enter a sentence
        System.out.println("Enter a sentence (e.g., 'I am not A String'):");
        String input = scanner.nextLine();

        // Split the input string into words
        String[] words = input.split(" ");

        // StringBuilder to hold the reversed sentence
        StringBuilder output = new StringBuilder();

        // Iterate over each word in the array
        for (String word : words) {
            // Reverse each word and append it to the StringBuilder
            String reversedWord = new StringBuilder(word).reverse().toString();
            output.append(reversedWord).append(" ");
        }

        // Output the reversed sentence
        System.out.println("Output: " + output.toString().trim());

        // Close the scanner
        scanner.close();
    }
}
=========================================================================================================
Q: 5 WAP in java a[] ={1,3,5,7,9}; b[] ={2,4,6,8}; output = c[] = {1,2,3,4,5,6,7,8,9}

import java.util.Arrays;

public class MergeArrays {
    public static void main(String[] args) {
        // Define the input arrays
        int[] a = {1, 3, 5, 7, 9};
        int[] b = {2, 4, 6, 8};

        // Output array to hold the merged result
        int[] c = new int[a.length + b.length];

        // Initialize pointers for both arrays and the output array
        int i = 0, j = 0, k = 0;

        // Merge arrays a and b into c[] in sorted order
        while (i < a.length && j < b.length) {
            if (a[i] < b[j]) {
                c[k++] = a[i++];
            } else {
                c[k++] = b[j++];
            }
        }

        // If there are remaining elements in a[]
        while (i < a.length) {
            c[k++] = a[i++];
        }

        // If there are remaining elements in b[]
        while (j < b.length) {
            c[k++] = b[j++];
        }

        // Output the merged sorted array
        System.out.println("Merged Array: " + Arrays.toString(c));
    }
}
======================================================================================